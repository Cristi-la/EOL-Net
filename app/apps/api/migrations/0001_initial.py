# Generated by Django 5.2.1 on 2025-06-05 23:18

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eol', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='A human-friendly name', max_length=200, unique=True)),
                ('key', models.CharField(db_index=True, help_text='Unguessable random string used as token identifier', max_length=40, unique=True)),
                ('can_write', models.BooleanField(default=False, help_text='Allow creating (POST) objects for selected vendors.')),
                ('can_edit', models.BooleanField(default=False, help_text='Allow editing (PUT/PATCH) existing objects for selected vendors.')),
                ('can_delete', models.BooleanField(default=False, help_text='Allow deleting (DELETE) existing objects for selected vendors.')),
                ('throttle_scope', models.CharField(choices=[('anon', 'Anonymous Rate'), ('default', 'Default Rate'), ('ha', 'High Availability Rate')], default='default', help_text='Pick which rate limit this token should use.', max_length=10)),
                ('valid_until', models.DateTimeField(default=datetime.datetime(2026, 6, 5, 23, 18, 16, 20879, tzinfo=datetime.timezone.utc), help_text='Date/time when this token becomes invalid.')),
                ('allowed_vendors', models.ManyToManyField(blank=True, help_text='List of Vendor IDs this token is allowed to write to (if can_write=True).', to='eol.vendor')),
                ('user', models.ForeignKey(help_text='User who “owns” this token', on_delete=django.db.models.deletion.CASCADE, related_name='api_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Token',
                'verbose_name_plural': 'API Tokens',
                'ordering': ['-created_at'],
            },
        ),
    ]
